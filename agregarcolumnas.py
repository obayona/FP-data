# -*- coding: utf-8 -*-
"""AgregarColumnas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lKJtv_bRuSqfou4EDcBJVmMNf2cTNESw
"""

import pandas as pd
import numpy as np


df2017_2 = pd.read_csv("2017II.csv", sep=";")
carreras = pd.read_csv("carreras.csv")

lista_csvs = ["2017II.csv", "2018I.csv", "2018II.csv"]

dfs = [pd.read_csv(csv, sep=";") for csv in lista_csvs]

not_modify = ['nombre', 'matricula', 'genero', 'paralelo', 'cod_carrera']

dfs[0].columns

dfs = [pd.read_csv(csv, sep=";") for csv in lista_csvs]

for df in dfs:
    df["veces_tomadas"] = df.veces_tomadas.fillna(1)
    for col in df.columns:
        if col not in not_modify:
            df[col] = df[col].astype(str)
            df[col] = df[col].str.replace(',', '.')
            df[col] = df[col].astype(float)
    df["veces_tomadas"] = df["veces_tomadas"].astype(int)

dfs_2017 = pd.read_csv("2017-I.csv", sep=";")

for df in dfs:
    columns = df.columns
    cols1ex = [col for  col in columns if "1er_exam_" in col]
    ex1_null = (np.all(df[cols1ex].isnull().values, axis = 1))
    print("Null ex1", ex1_null.sum())
    cols2ex = [col for  col in columns if "2do_exam_" in col]
    
    ex2_null = (np.all(df[cols2ex].isnull().values, axis = 1))
    print("Null ex2", ex2_null.sum())
    
    eq_0 = (df["1er_calif_final"].isnull() | df["2do_calif_final"].isnull()  | (df["1er_calif_final"] == 0) | 
          (df["2do_calif_final"] == 0))
    print("Num eq0", eq_0.sum())
    print(df.isnull().sum())
    df["retirado"] = (eq_0 | ex1_null | ex2_null)
    print("retirados:", df.retirado.sum())

df = dfs[0]
df[df.retirado]

def calcular_notas(notas):
    notas["examen1"] = notas[notas.columns[notas.columns.str.contains("1er_exam_tema")]].sum(axis=1, skipna=False)
    notas["examen2"] = notas[notas.columns[notas.columns.str.contains("2do_exam_tema")]].sum(axis=1, skipna=False)
    notas["examen3"] = notas[notas.columns[notas.columns.str.contains("3er_exam_tema")]].sum(axis=1, skipna=False)
    notas["final_sin_mejoramiento"] = 0.2*notas.calif_final_practica + 0.80*(notas[["1er_calif_final", "2do_calif_final"]].mean(axis=1, skipna=False))
    notas["3er_calif_final"] = notas["3er_calif_final"].fillna(0)
    finales = notas[["1er_calif_final", "2do_calif_final", "3er_calif_final"]].values
    notas["final"] = (np.sort(finales, axis=1)[:, 1:].mean(1))*0.8 + 0.2*notas.calif_final_practica
    notas["AP"] = notas.final >= 60

for df in dfs:
    calcular_notas(df)

for df in dfs:
    print(df.AP.value_counts())

for i, filename in enumerate(("2017_2T", "2018_1T", "2018_2T")):
    dfs[i].to_csv(filename+".csv", index=False, sep=";")



